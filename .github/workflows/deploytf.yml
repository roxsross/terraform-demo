name: 'Terraform'

on:
  push:
    branches: 
    - develop
    - testing
    - master


jobs:

  init-zip:
    name: 'ðŸ“ŒZip Aplicacion'
    runs-on: ubuntu-latest
    environment: develop
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: '14'
    - run: npm install
    - run: npm run pack
    - uses: actions/upload-artifact@v3
      with:
        name: zip
        path: function.zip
    
 
  deploy-dev:
    name: 'ðŸš€Deploy Terraform to Develop'
    if: ${{ github.ref == 'refs/heads/develop' }}
    needs: init-zip
    runs-on: ubuntu-latest
    environment: develop
    defaults: 
      run: 
        working-directory: ./terraform

    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - uses: actions/download-artifact@v3
      with: 
        name: zip

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with: 
        terraform_version: 1.2.9

    - name: Terraform
      run: |
        rm -rf .terraform
        terraform init
        terraform validate
        terraform plan -var-file tfvars/$ENV.tfvars -out plan.out
        terraform apply "plan.out"
      env:
        ENV: dev
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: "us-east-1"
        GITHUB_TOKEN: ${{ secrets.GITHUBTOKEN }}
      
  deploy-testing:
    name: 'ðŸš€Deploy Terraform to testing'
    if: ${{ github.ref == 'refs/heads/testing' }}
    needs: init-zip
    runs-on: ubuntu-latest
    environment: testing
    defaults: 
      run: 
        working-directory: ./terraform

    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - uses: actions/download-artifact@v3
      with: 
        name: zip

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with: 
        terraform_version: 1.2.9

    - name: Terraform
      run: |
        rm -rf .terraform
        terraform init
        terraform validate
        terraform plan -var-file tfvars/$ENV.tfvars -out plan.out
        terraform apply "plan.out"
      env:
        ENV: test
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: "us-east-1"
        GITHUB_TOKEN: ${{ secrets.GITHUBTOKEN }}
 
  deploy-prod:
    name: 'ðŸš€Deploy Terraform to prod'
    if: ${{ github.ref == 'refs/heads/master' }}
    needs: init-zip
    runs-on: ubuntu-latest
    environment: develop
    defaults: 
      run: 
        working-directory: ./terraform

    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - uses: actions/download-artifact@v3
      with: 
        name: zip

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with: 
        terraform_version: 1.2.9

    - name: Terraform
      run: |
        rm -rf .terraform
        terraform init
        terraform validate
        terraform plan -var-file tfvars/$ENV.tfvars -out plan.out
        terraform apply "plan.out"
      env:
        ENV: prod
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: "us-east-1"
        GITHUB_TOKEN: ${{ secrets.GITHUBTOKEN }}   
       
